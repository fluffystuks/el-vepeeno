from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from db import get_or_create_user, is_trial_used
from handlers.referral import process_signup

async def start(update: Update, context: CallbackContext):
    tg_id = str(update.effective_user.id)
    user_id, _ = get_or_create_user(tg_id)
    if update.message and context.args:
        ref_tg = context.args[0]
        await process_signup(update, context, ref_tg, user_id)
    trial = is_trial_used(user_id)

    if not trial:
        # üÜï –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
        text = (
            "üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n"
            "üÜì –£ –≤–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω *–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –∫–ª—é—á –Ω–∞ 3 –¥–Ω—è*.\n\n"
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ *¬´–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø¬ª*\n"
            "2Ô∏è‚É£ –ì–æ—Ç–æ–≤—ã–π –∫–ª—é—á –ø–æ—è–≤–∏—Ç—Å—è –≤ *–ê–∫–∫–∞—É–Ω—Ç–µ*\n"
            "3Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –ø–æ *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏*\n\n"
            "–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ *–ü–æ–º–æ—â—å* ‚ù§Ô∏è"
        )

        keyboard = [
            [InlineKeyboardButton("üéÅ –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø", callback_data="trial")],
            [
                InlineKeyboardButton("üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction"),
                InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="help")
            ],
            [InlineKeyboardButton("üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral")]
        ]

    else:
        text = (
            "üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!* üåü\n\n"
            f"üîπ *–í–∞—à TG ID:* `{tg_id}`\n"
            "‚öôÔ∏è *–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:* —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞–º–∏, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ‚Äî –≤ –ø–∞—Ä—É –∫–∞—Å–∞–Ω–∏–π\n\n"
            "‚ùì *–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?* –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–º–æ—â—å¬ª –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º."
        )

        keyboard = [
            [
                InlineKeyboardButton("üîó –í—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data='connect'),
                InlineKeyboardButton("üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data='instruction')
            ],
            [
                InlineKeyboardButton("üë§ –ê–∫–∫–∞—É–Ω—Ç / –ö–ª—é—á–∏", callback_data='account'),
                InlineKeyboardButton("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data='top_up')
            ],
            [
                InlineKeyboardButton("ü§ì –ü–æ–º–æ—â—å", callback_data='help'),
                InlineKeyboardButton("üìå –ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", callback_data="rules")
            ],
            [InlineKeyboardButton("üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral")]
        ]

    markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text(text, reply_markup=markup, parse_mode="Markdown")
    else:
        await update.callback_query.answer()
        await update.callback_query.edit_message_text(text, reply_markup=markup, parse_mode="Markdown")
